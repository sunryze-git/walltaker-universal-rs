name: Build Rust Binaries

on:
  push:
    branches: [ main, stable ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build Linux binary
        run: cargo build --release
      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: walltaker-universal-rs-linux
          path: target/release/walltaker-universal-rs

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build Windows binary
        run: cargo build --release
      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: walltaker-universal-rs-windows.exe
          path: target/release/walltaker-universal-rs.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build macOS binary
        run: cargo build --release
      - name: Upload macOS binary
        uses: actions/upload-artifact@v4
        with:
          name: walltaker-universal-rs-macos
          path: target/release/walltaker-universal-rs

  release:
    if: github.ref == 'refs/heads/stable'
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read Version
        id: version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          release_name: "Release v${{ env.VERSION }}"
          draft: false
          prerelease: false
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/walltaker-universal-rs-linux
          asset_name: walltaker-universal-rs-linux
          asset_content_type: application/octet-stream
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/walltaker-universal-rs.exe
          asset_name: walltaker-universal-rs-windows.exe
          asset_content_type: application/octet-stream
      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/walltaker-universal-rs
          asset_name: walltaker-universal-rs-macos
          asset_content_type: application/octet-stream
